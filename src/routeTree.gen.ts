/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SkillsImport } from "./routes/skills";
import { Route as ProjectsImport } from "./routes/projects";
import { Route as ExperienceImport } from "./routes/experience";
import { Route as ContactImport } from "./routes/contact";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const SkillsRoute = SkillsImport.update({
  path: "/skills",
  getParentRoute: () => rootRoute,
} as any);

const ProjectsRoute = ProjectsImport.update({
  path: "/projects",
  getParentRoute: () => rootRoute,
} as any);

const ExperienceRoute = ExperienceImport.update({
  path: "/experience",
  getParentRoute: () => rootRoute,
} as any);

const ContactRoute = ContactImport.update({
  path: "/contact",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/contact": {
      id: "/contact";
      path: "/contact";
      fullPath: "/contact";
      preLoaderRoute: typeof ContactImport;
      parentRoute: typeof rootRoute;
    };
    "/experience": {
      id: "/experience";
      path: "/experience";
      fullPath: "/experience";
      preLoaderRoute: typeof ExperienceImport;
      parentRoute: typeof rootRoute;
    };
    "/projects": {
      id: "/projects";
      path: "/projects";
      fullPath: "/projects";
      preLoaderRoute: typeof ProjectsImport;
      parentRoute: typeof rootRoute;
    };
    "/skills": {
      id: "/skills";
      path: "/skills";
      fullPath: "/skills";
      preLoaderRoute: typeof SkillsImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/contact": typeof ContactRoute;
  "/experience": typeof ExperienceRoute;
  "/projects": typeof ProjectsRoute;
  "/skills": typeof SkillsRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/contact": typeof ContactRoute;
  "/experience": typeof ExperienceRoute;
  "/projects": typeof ProjectsRoute;
  "/skills": typeof SkillsRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/contact": typeof ContactRoute;
  "/experience": typeof ExperienceRoute;
  "/projects": typeof ProjectsRoute;
  "/skills": typeof SkillsRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/contact" | "/experience" | "/projects" | "/skills";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/contact" | "/experience" | "/projects" | "/skills";
  id: "__root__" | "/" | "/contact" | "/experience" | "/projects" | "/skills";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ContactRoute: typeof ContactRoute;
  ExperienceRoute: typeof ExperienceRoute;
  ProjectsRoute: typeof ProjectsRoute;
  SkillsRoute: typeof SkillsRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRoute,
  ExperienceRoute: ExperienceRoute,
  ProjectsRoute: ProjectsRoute,
  SkillsRoute: SkillsRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contact",
        "/experience",
        "/projects",
        "/skills"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/experience": {
      "filePath": "experience.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/skills": {
      "filePath": "skills.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
